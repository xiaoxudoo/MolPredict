{"version":3,"sources":["../../../source/lib/style/style.js"],"names":["utils","require","_","Alignment","Border","Fill","Font","NumberFormat","_getFontId","wb","font","merge","opts","defaultFont","thisFont","lookupKey","JSON","stringify","toObject","id","styleDataLookup","fonts","undefined","styleData","push","_getFillId","fill","thisFill","fills","_getBorderId","border","thisBorder","borders","_getNumFmt","val","fmt","numFmts","forEach","f","isEqual","formatCode","fmtId","length","numFmtId","Style","alignment","borderId","fillId","fontId","numberFormat","numFmt","pivotButton","quotePrefix","ids","obj","ele","thisEle","thisXF","xf","Object","keys","a","addToXMLele","att","applyFont","applyFill","applyBorder","applyNumberFormat","applyAlignment","module","exports"],"mappings":"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","file":"style.js","sourcesContent":["const utils = require('../utils.js');\nconst _ = require('lodash');\n\nconst Alignment = require('./classes/alignment.js');\nconst Border = require('./classes/border.js');\nconst Fill = require('./classes/fill.js');\nconst Font = require('./classes/font.js');\nconst NumberFormat = require('./classes/numberFormat.js');\n\nlet _getFontId = (wb, font) => {\n\n    // Create the Font and lookup key\n    font = _.merge({}, wb.opts.defaultFont, font);\n    const thisFont = new Font(font);\n    const lookupKey = JSON.stringify(thisFont.toObject());\n\n    // Find an existing entry, creating a new one if it does not exist\n    let id = wb.styleDataLookup.fonts[lookupKey];\n    if (id === undefined) {\n        id = wb.styleData.fonts.push(thisFont) - 1;\n        wb.styleDataLookup.fonts[lookupKey] = id;\n    }\n\n    return id;\n};\n\nlet _getFillId = (wb, fill) => {\n    if (fill === undefined) {\n        return null;\n    }\n\n    // Create the Fill and lookup key\n    const thisFill = new Fill(fill);\n    const lookupKey = JSON.stringify(thisFill.toObject());\n\n    // Find an existing entry, creating a new one if it does not exist\n    let id = wb.styleDataLookup.fills[lookupKey];\n    if (id === undefined) {\n        id = wb.styleData.fills.push(thisFill) - 1;\n        wb.styleDataLookup.fills[lookupKey] = id;\n    }\n\n    return id;\n};\n\nlet _getBorderId = (wb, border) => {\n    if (border === undefined) {\n        return null;\n    }\n\n    // Create the Border and lookup key\n    const thisBorder = new Border(border);\n    const lookupKey = JSON.stringify(thisBorder.toObject());\n\n    // Find an existing entry, creating a new one if it does not exist\n    let id = wb.styleDataLookup.borders[lookupKey];\n    if (id === undefined) {\n        id = wb.styleData.borders.push(thisBorder) - 1;\n        wb.styleDataLookup.borders[lookupKey] = id;\n    }\n\n    return id;\n};\n\nlet _getNumFmt = (wb, val) => {\n    let fmt;\n    wb.styleData.numFmts.forEach((f) => {\n        if (_.isEqual(f.formatCode, val)) {\n            fmt = f;\n        }\n    });\n\n    if (fmt === undefined) {\n        let fmtId = wb.styleData.numFmts.length + 164;\n        fmt = new NumberFormat(val);\n        fmt.numFmtId = fmtId;\n        wb.styleData.numFmts.push(fmt);\n    }\n\n    return fmt;\n};\n\n\n/*\n    Style Opts\n    {\n        alignment: { // ยง18.8.1\n            horizontal: ['center', 'centerContinuous', 'distributed', 'fill', 'general', 'justify', 'left', 'right'],\n            indent: integer, // Number of spaces to indent = indent value * 3\n            justifyLastLine: boolean,\n            readingOrder: ['contextDependent', 'leftToRight', 'rightToLeft'], \n            relativeIndent: integer, // number of additional spaces to indent\n            shrinkToFit: boolean,\n            textRotation: integer, // number of degrees to rotate text counter-clockwise\n            vertical: ['bottom', 'center', 'distributed', 'justify', 'top'],\n            wrapText: boolean\n        },\n        font: { // ยง18.8.22\n            bold: boolean,\n            charset: integer,\n            color: string,\n            condense: boolean,\n            extend: boolean,\n            family: string,\n            italics: boolean,\n            name: string,\n            outline: boolean,\n            scheme: string, // ยง18.18.33 ST_FontScheme (Font scheme Styles)\n            shadow: boolean,\n            strike: boolean,\n            size: integer,\n            underline: boolean,\n            vertAlign: string // ยง22.9.2.17 ST_VerticalAlignRun (Vertical Positioning Location)\n        },\n        border: { // ยง18.8.4 border (Border)\n            left: {\n                style: string,\n                color: string\n            },\n            right: {\n                style: string,\n                color: string\n            },\n            top: {\n                style: string,\n                color: string\n            },\n            bottom: {\n                style: string,\n                color: string\n            },\n            diagonal: {\n                style: string,\n                color: string\n            },\n            diagonalDown: boolean,\n            diagonalUp: boolean,\n            outline: boolean\n        },\n        fill: { // ยง18.8.20 fill (Fill)\n            type: 'pattern',\n            patternType: 'solid',\n            color: 'Yellow'\n        },\n        numberFormat: integer or string // ยง18.8.30 numFmt (Number Format)\n    }\n*/\nclass Style {\n    constructor(wb, opts) {\n        /**\n         * Excel Style object\n         * @class Style\n         * @desc Style object for formatting Excel Cells\n         * @param {Workbook} wb Excel Workbook object\n         * @param {Object} opts Options for style\n         * @param {Object} opts.alignment Options for creating an Alignment instance\n         * @param {Object} opts.font Options for creating a Font instance\n         * @param {Object} opts.border Options for creating a Border instance\n         * @param {Object} opts.fill Options for creating a Fill instance\n         * @param {String} opts.numberFormat\n         * @property {Alignment} alignment Alignment instance associated with Style\n         * @property {Border} border Border instance associated with Style\n         * @property {Number} borderId ID of Border instance in the Workbook\n         * @property {Fill} fill Fill instance associated with Style\n         * @property {Number} fillId ID of Fill instance in the Workbook\n         * @property {Font} font Font instance associated with Style\n         * @property {Number} fontId ID of Font instance in the Workbook\n         * @property {String} numberFormat String represenation of the way a number should be formatted\n         * @property {Number} xf XF id of the Style in the Workbook\n         * @returns {Style} \n         */\n        opts = opts ? opts : {};\n\n        if (opts.alignment !== undefined) {\n            this.alignment = new Alignment(opts.alignment);\n        }\n\n        if (opts.border !== undefined) {  \n            this.borderId = _getBorderId(wb, opts.border); // attribute 0 based index\n            this.border = wb.styleData.borders[this.borderId];  \n        }\n        if (opts.fill !== undefined) {  \n            this.fillId = _getFillId(wb, opts.fill); // attribute 0 based index\n            this.fill = wb.styleData.fills[this.fillId];\n        }\n\n        if (opts.font !== undefined) {  \n            this.fontId = _getFontId(wb, opts.font); // attribute 0 based index\n            this.font = wb.styleData.fonts[this.fontId];\n        }\n\n        if (opts.numberFormat !== undefined) {  \n            if (typeof opts.numberFormat === 'number' && opts.numberFormat <= 164) {\n                this.numFmtId = opts.numberFormat;\n            } else if (typeof opts.numberFormat === 'string') {\n                this.numFmt = _getNumFmt(wb, opts.numberFormat);\n            }\n        }\n\n        if (opts.pivotButton !== undefined) {\n            this.pivotButton = null; // attribute boolean\n        }\n\n        if (opts.quotePrefix !== undefined) {\n            this.quotePrefix = null; // attribute boolean\n        }\n\n        this.ids = {};\n    }\n\n    get xf() {\n        let thisXF = {};\n\n        if (typeof this.fontId === 'number') {\n            thisXF.applyFont = 1;\n            thisXF.fontId = this.fontId;\n        }\n\n        if (typeof this.fillId === 'number') {\n            thisXF.applyFill = 1;\n            thisXF.fillId = this.fillId;\n        }\n\n        if (typeof this.borderId === 'number') {\n            thisXF.applyBorder = 1;\n            thisXF.borderId = this.borderId;\n        }\n\n        if (typeof this.numFmtId === 'number') {\n            thisXF.applyNumberFormat = 1;\n            thisXF.numFmtId = this.numFmtId;\n        } else if (this.numFmt !== undefined && this.numFmt !== null) {\n            thisXF.applyNumberFormat = 1;\n            thisXF.numFmtId = this.numFmt.numFmtId;\n        }\n\n        if (this.alignment instanceof Alignment) {\n            thisXF.applyAlignment = 1;\n            thisXF.alignment = this.alignment;\n        }\n\n        return thisXF;\n    }\n\n\n    /** \n     * @func Style.toObject\n     * @desc Converts the Style instance to a javascript object\n     * @returns {Object}\n     */\n    toObject() {\n        let obj = {};\n\n        if (typeof this.fontId === 'number') {\n            obj.font = this.font.toObject();\n        }\n\n        if (typeof this.fillId === 'number') {\n            obj.fill = this.fill.toObject();\n        }\n\n        if (typeof this.borderId === 'number') {\n            obj.border = this.border.toObject();\n        }\n\n        if (typeof this.numFmtId === 'number' && this.numFmtId < 164) {\n            obj.numberFormat = this.numFmtId;\n        } else if (this.numFmt !== undefined && this.numFmt !== null) {\n            obj.numberFormat = this.numFmt.formatCode;\n        }\n\n        if (this.alignment instanceof Alignment) {\n            obj.alignment = this.alignment.toObject();\n        }\n\n        if (this.pivotButton !== undefined) {\n            obj.pivotButton = this.pivotButton;\n        }\n\n        if (this.quotePrefix !== undefined) {\n            obj.quotePrefix = this.quotePrefix;\n        }\n\n        return obj;   \n    }\n\n    /**\n     * @alias Style.addToXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file\n     * @func Style.addToXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addXFtoXMLele(ele) {\n        let thisEle = ele.ele('xf');\n        let thisXF = this.xf;\n        Object.keys(thisXF).forEach((a) => {\n            if (a === 'alignment') {\n                thisXF[a].addToXMLele(thisEle);\n            } else {\n                thisEle.att(a, thisXF[a]);\n            }\n        });        \n    }\n\n    /**\n     * @alias Style.addDXFtoXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file as a dxf for use with conditional formatting rules\n     * @func Style.addDXFtoXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addDXFtoXMLele(ele) {\n        let thisEle = ele.ele('dxf');\n\n        if (this.font instanceof Font) {\n            this.font.addToXMLele(thisEle);\n        }\n\n        if (this.numFmt instanceof NumberFormat) {\n            this.numFmt.addToXMLele(thisEle);\n        }\n\n        if (this.fill instanceof Fill) {\n            this.fill.addToXMLele(thisEle);\n        }\n\n        if (this.alignment instanceof Alignment) {\n            this.alignment.addToXMLele(thisEle);\n        }\n\n        if (this.border instanceof Border) {\n            this.border.addToXMLele(thisEle);\n        }\n    }\n}\n\nmodule.exports = Style;"]}